function win=integralorientations(img,win,numblocks,numang)
% Image loading and initial processing
%img = imread(docname) ;
%color processing
if (size(img,3)>1)
    img = uint8(rgb2gray(img)) ;
end
% variable initialization
[imgh imgw]=size(img);

%img= histeq(img);
%img= imadjust(img);
h=[-1 0 1];
dx=imfilter(double(img),h,'same');
dy=imfilter(double(img),h','same');
%[dx,dy]=gradient(double(img),2,2);
w=sqrt(dx.^2+dy.^2);
a=180*atan2(dx,dy)./pi;
a=360*(a<0)+a;
an=0:360/numang:360;    
[ax,ax]=histc(a,an);

%ax=ax.*double(edge(img,'canny'));
% Get integral counts of the angles for histo calc

for i=1:size(an,2)-1
    axi=(ax==i);
    wxi=axi.*w;
    intcount{i}=cumsum(cumsum(double(wxi),1),2);
end
imd=zeros(size(img));
for i=1+max(win):size(img,1)-max(win)
for j=1+max(win):size(img,2)-max(win)
    for wk=1:size(win,1)  
        blocky=uint16(i-win(wk):(2*win(wk))/numblocks(sc,1):i+win(wk));
        blockx=uint16(j-win(wk):(2*win(wk))/numblocks(sc,2):j+win(wk));
    
        feat=zeros(numblocks(sc,1),numblocks(sc,2),numang);
   
            for nj=1:numblocks(sc,1)
            for nk=1:numblocks(sc,2)
            % disp (['j=' int2str(j) ' k=' int2str(k)]);
                ny1=win(i).blocky(nj);
                ny2=win(i).blocky(nj+1);
                nx1=win(i).blockx(nk);
                nx2=win(i).blockx(nk+1);
            
                for l=1:numang
                    feat(nj,nk,l)=(intcount{l}(ny2,nx2)+intcount{l}(ny1,nx1)) ...
                        -(intcount{l}(ny1,nx2) + intcount{l}(ny2,nx1));
                end
            
            end
            end
    
    fv(wk,:)=[fv; feat(:)];
    end
    g=max(max(pdist(fv)));
    if (imd(i,j) < g)
    imd(i,j)=g;
    
end
    % fv=filter([0.1664    0.6672    0.1664],1,fv);
    fv=(fv./sqrt(sum(fv.^2)));
    win(i).descriptor=255*fv;
    %win(i).descriptor=fv;
end

end